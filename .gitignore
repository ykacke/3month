# Создано https://www.toptal.com/developers/gitignore/api/python
# Редактировать на https://www.toptal.com/developers/gitignore?templates=python

### Питон ###
# Байт-скомпилированные / оптимизированные / DLL-файлы
__pycache__/
*.py[код]
*$py.класс

# Расширения C
*.так

# Распространение/упаковка
.Python
строить/
развиваются-яйца/
расст./
загрузки/
яйца/
.яйца/
lib/
lib64/
части/
сдист/
вар/
колеса/
поделиться/python-wheels/
*.egg-info/
.установленный.cfg
*.яйцо
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы пишутся скриптом Python из шаблона
# до того, как PyInstaller соберет exe-файл, чтобы добавить в него дату и другую информацию.
*.манифест
*.спецификация

# Журналы установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчеты о модульном тестировании/покрытии
htmlcov/
.токс/
.нокс/
.покрытие
.покрытие.*
.кэш
ностесты.xml
покрытие.xml
*.крышка
*.py,обложка
.гипотеза/
.pytest_cache/
крышка/

# Переводы
*.мо
*.горшок

# Что-то из Джанго:
*.бревно
local_settings.py
БД.sqlite3
db.sqlite3-журнал

# Фласк-вещи:
пример/
.webassets-кэш

# Скрапбукинг:
.скребок

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
цель/

# Блокнот Jupyter
.ipynb_контрольные точки

# IPython
профиль_по умолчанию/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, так как код
# предназначены для работы в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включить Pipfile.lock в систему контроля версий.
# Однако в случае совместной работы, если имеются платформенно-специфичные зависимости или зависимости
# не имея кроссплатформенной поддержки, pipenv может установить зависимости, которые не работают, или не
# установить все необходимые зависимости.
#Pipfile.lock

# поэзия
# Подобно Pipfile.lock, обычно рекомендуется включать poetry.lock в систему контроля версий.
# Это особенно рекомендуется для бинарных пакетов, чтобы гарантировать воспроизводимость, и более
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.замок

# пдм
# Как и Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в системе контроля версий.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Сельдерей
celerybeat-расписание
celerybeat.пид

# Файлы, проанализированные SageMath
*.sage.py

# Окружающая среда
.env
.венв
окр/
венв/
ОКРУЖАЮЩАЯ СРЕДА/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта веревки
.веревочный проект

# mkdocs документация
/сайт

# мойпи
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа Pyre
.pyre/

# статический анализатор типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Шаблон, специфичный для JetBrains, хранится в отдельном файле JetBrains.gitignore, который можно
# можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен с этим файлом. Для более ядерного
# вариант (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.идея/

### Патч Python ###
# Локальный файл конфигурации Poetry - https://python-poetry.org/docs/configuration/#local-configuration
поэзия.томл

# ерш
.ruff_cache/

# Файлы конфигурации LSP
pyrightconfig.json

# Конец https://www.toptal.com/developers/gitignore/api/python